// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using TaxFormGeneratorApi.Dal;

namespace TaxFormGeneratorApi.Migrations
{
    [DbContext(typeof(TaxFormGeneratorContext))]
    [Migration("20190408161755_OibsToString")]
    partial class OibsToString
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.2.3-servicing-35854")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("TaxFormGeneratorApi.Domain.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Email")
                        .IsRequired();

                    b.Property<string>("FirstName")
                        .IsRequired();

                    b.Property<string>("LastName")
                        .IsRequired();

                    b.Property<string>("Password")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(null);

                    b.Property<string>("RefreshToken");

                    b.Property<string>("Salt")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("RefreshToken")
                        .IsUnique();

                    b.ToTable("User");
                });

            modelBuilder.Entity("TaxFormGeneratorApi.Domain.UserSettings", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("UserSettings");
                });

            modelBuilder.Entity("TaxFormGeneratorApi.Domain.UserSettings", b =>
                {
                    b.HasOne("TaxFormGeneratorApi.Domain.User", "User")
                        .WithOne("UserSettings")
                        .HasForeignKey("TaxFormGeneratorApi.Domain.UserSettings", "UserId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.OwnsOne("TaxFormGeneratorApi.Domain.CitySettings", "City", b1 =>
                        {
                            b1.Property<int>("UserSettingsId");

                            b1.Property<string>("Code")
                                .IsRequired()
                                .HasColumnName("CityCode");

                            b1.Property<string>("Iban")
                                .IsRequired()
                                .HasColumnName("CityIban");

                            b1.Property<double>("Surtax")
                                .HasColumnName("CitySurtax");

                            b1.HasKey("UserSettingsId");

                            b1.ToTable("UserSettings");

                            b1.HasOne("TaxFormGeneratorApi.Domain.UserSettings")
                                .WithOne("City")
                                .HasForeignKey("TaxFormGeneratorApi.Domain.CitySettings", "UserSettingsId")
                                .OnDelete(DeleteBehavior.Cascade);
                        });

                    b.OwnsOne("TaxFormGeneratorApi.Domain.CompanySettings", "Company", b1 =>
                        {
                            b1.Property<int>("UserSettingsId");

                            b1.Property<string>("City")
                                .IsRequired()
                                .HasColumnName("CompanyCity");

                            b1.Property<string>("Email")
                                .IsRequired()
                                .HasColumnName("CompanyEmail");

                            b1.Property<string>("Name")
                                .IsRequired()
                                .HasColumnName("CompanyName");

                            b1.Property<string>("Oib")
                                .IsRequired()
                                .HasColumnName("CompanyOib");

                            b1.Property<string>("Street")
                                .IsRequired()
                                .HasColumnName("CompanyStreet");

                            b1.HasKey("UserSettingsId");

                            b1.HasIndex("Oib")
                                .IsUnique();

                            b1.ToTable("UserSettings");

                            b1.HasOne("TaxFormGeneratorApi.Domain.UserSettings")
                                .WithOne("Company")
                                .HasForeignKey("TaxFormGeneratorApi.Domain.CompanySettings", "UserSettingsId")
                                .OnDelete(DeleteBehavior.Cascade);
                        });

                    b.OwnsOne("TaxFormGeneratorApi.Domain.DividendSettings", "Dividend", b1 =>
                        {
                            b1.Property<int>("UserSettingsId");

                            b1.Property<double>("DividendTax")
                                .HasColumnName("DividendTax");

                            b1.HasKey("UserSettingsId");

                            b1.ToTable("UserSettings");

                            b1.HasOne("TaxFormGeneratorApi.Domain.UserSettings")
                                .WithOne("Dividend")
                                .HasForeignKey("TaxFormGeneratorApi.Domain.DividendSettings", "UserSettingsId")
                                .OnDelete(DeleteBehavior.Cascade);
                        });

                    b.OwnsOne("TaxFormGeneratorApi.Domain.PersonalSettings", "Personal", b1 =>
                        {
                            b1.Property<int>("UserSettingsId");

                            b1.Property<string>("City")
                                .IsRequired()
                                .HasColumnName("City");

                            b1.Property<string>("Oib")
                                .IsRequired()
                                .HasColumnName("PersonalOib");

                            b1.Property<string>("Postcode")
                                .IsRequired()
                                .HasColumnName("Postcode");

                            b1.Property<string>("StreetName")
                                .IsRequired()
                                .HasColumnName("StreetName");

                            b1.Property<string>("StreetNumber")
                                .IsRequired()
                                .HasColumnName("StreetNumber");

                            b1.HasKey("UserSettingsId");

                            b1.HasIndex("Oib")
                                .IsUnique();

                            b1.ToTable("UserSettings");

                            b1.HasOne("TaxFormGeneratorApi.Domain.UserSettings")
                                .WithOne("Personal")
                                .HasForeignKey("TaxFormGeneratorApi.Domain.PersonalSettings", "UserSettingsId")
                                .OnDelete(DeleteBehavior.Cascade);
                        });

                    b.OwnsOne("TaxFormGeneratorApi.Domain.SalarySettings", "Salary", b1 =>
                        {
                            b1.Property<int>("UserSettingsId");

                            b1.Property<decimal>("Amount")
                                .HasColumnName("SalaryAmount");

                            b1.Property<string>("Currency")
                                .IsRequired()
                                .HasColumnName("SalaryCurrency");

                            b1.Property<double>("EmploymentContribution")
                                .HasColumnName("SalaryEmploymentContribution");

                            b1.Property<double>("HealthInsuranceContribution")
                                .HasColumnName("SalaryHealthInsuranceContribution");

                            b1.Property<decimal>("NonTaxableAmount")
                                .HasColumnName("SalaryNonTaxableAmount");

                            b1.Property<double>("PensionPillar1Contribution")
                                .HasColumnName("SalaryPensionPillar1Contribution");

                            b1.Property<double>("PensionPillar2Contribution")
                                .HasColumnName("SalaryPensionPillar2Contribution");

                            b1.Property<double>("SalaryTax");

                            b1.Property<double>("WorkSafetyContribution")
                                .HasColumnName("SalaryWorkSafetyContribution");

                            b1.HasKey("UserSettingsId");

                            b1.ToTable("UserSettings");

                            b1.HasOne("TaxFormGeneratorApi.Domain.UserSettings")
                                .WithOne("Salary")
                                .HasForeignKey("TaxFormGeneratorApi.Domain.SalarySettings", "UserSettingsId")
                                .OnDelete(DeleteBehavior.Cascade);
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
